# variables in header
openstack-request-id:
  description: >
    A unique ID for tracking the request. The request ID associated with the request
    appears in the log lines for that request. By default, the middleware configuration
    ensures that the request ID appears in the log files.
  in: header
  required: true
  type: string

# variables in path
api_version:
  in: path
  required: true
  type: string
  description: >
    The API version as returned in the links from the ``GET /`` call.
spec_key_path:
  description: |
    The key of the extra spec.
  in: path
  required: true
  type: string
type_uuid_path:
  description: |
    The UUID of the type.
  in: path
  required: true
  type: string

# variables in query
user_id:
  description: |
    Filters the response by a user, by ID.
  in: query
  required: false
  type: string

# variables in body

availability-zone:
  description: |
    The availability zone from which to launch the instance. When you provision resources,
    you specify from which availability zone you want your instance to be built.  Typically,
    you use availability zones to arrange bare metal nodes into logical groups.
    An availability zone provides a form of physical isolation and redundancy from
    other availability zones. For instance, if some racks in your data center are
    on a separate power source, you can put servers in those racks in their own availability
    zone. Availability zones can also help separate different classes of hardware.  By
    segregating resources into availability zones, you can ensure that your application
    resources are spread across disparate machines to achieve high availability in
    the event of hardware or other failure.
  in: body
  required: false
  type: string
created_at:
  description: |
    The date and time when the resource was created. The date and time
    stamp format is `ISO 8601 <https://en.wikipedia.org/wiki/ISO_8601>`_

    ::

      CCYY-MM-DDThh:mm:ss±hh:mm

    For example, ``2015-08-27T09:49:58-05:00``. The ``±hh:mm``
    value, if included, is the time zone as an offset from UTC.  In
    the previous example, the offset value is ``-05:00``.
  in: body
  required: true
  type: string
imageRef:
  description: |
    The UUID of the image to use for your instance.
  in: body
  required: true
  type: string
instance_description:
  type: string
  in: body
  required: false
  description: |
    A free form description of the instance. Limited to 255 characters
    in length.
instance_name:
  description: |
    The instance name.
  in: body
  required: true
  type: string
instance_power_state:
  description: |
    The power state of the instance.
  in: body
  required: true
  type: string
instance_status:
  description: |
    The instance status.
  in: body
  required: true
  type: string
instance_uuid:
  description: |
    The UUID of the server instance
  in: body
  required: true
  type: string
links:
  description: |
    Links to the resources in question.
  in: body
  required: true
  type: array
network_info:
  description: |
    The network info for the instance.
  in: body
  required: true
  type: dict
network_port_type:
  description: |
    To provision the server instance with a specified type of NIC(like 1GE or 10 GE) for a
    network, specify the type of the NIC in the ``port_type`` key in a dict in ``networks`` list.
  in: body
  required: false
  type: string
network_uuid:
  description: |
    To provision the server instance with a NIC for a network, specify the UUID of
    the network in the ``uuid`` key in a dict in ``networks`` list.
  in: body
  required: true
  type: string
networks:
  description: |
    A list of networks of the tenant. Optionally, you can create one or more NICs on the instance.
    To provision the server instance with a NIC for a network, specify the UUID of the network
    in the ``uuid`` key in a dict in ``networks`` list. To provision the server instance with a
    specified type of NIC, specify the port-type key in a dict in a ``networks`` list.
  in: body
  required: true
  type: array
project_id_body:
  description: |
    The UUID of the project in a multi-tenancy cloud.
  in: body
  required: true
  type: string
type_description:
  description: |
    The description of the type.
  in: body
  required: true
  type: string
type_extra_specs:
  description: |
    Extra spec key and value pairs associate with the type.
  in: body
  required: true
  type: object
type_id_body:
  description: |
    The ID of the type.
  in: body
  required: true
  type: string
type_id_body_not_required:
  description: |
    The ID of the type.
  in: body
  required: false
  type: string
type_is_public:
  description: |
    Whether the type is public (available to all projects) or scoped
    to a set of projects. Default is True if not specified.
  in: body
  required: true
  type: boolean
type_is_public_not_required:
  description: |
    Whether the type is public (available to all projects) or scoped
    to a set of projects. Default is True if not specified.
  in: body
  required: true
  type: boolean
type_name:
  description: |
    The name of the type.
  in: body
  required: true
  type: string
type_uuid:
  description: |
    The UUID of the type.
  in: body
  required: true
  type: string
type_uuid_not_required:
  description: |
    The UUID of the type.
  in: body
  required: false
  type: string
typeRef:
  description: |
    The type reference, as a UUID or full URL, for the type for your server instance.
  in: body
  required: true
  type: string
types:
  description: |
    An array of type objects.
  in: body
  required: true
  type: array
updated_at:
  description: |
    The date and time when the resource was updated. The date and time
    stamp format is `ISO 8601 <https://en.wikipedia.org/wiki/ISO_8601>`_

    ::

      CCYY-MM-DDThh:mm:ss±hh:mm

    For example, ``2015-08-27T09:49:58-05:00``. The ``±hh:mm``
    value, if included, is the time zone as an offset from UTC.  In
    the previous example, the offset value is ``-05:00``.
  in: body
  required: true
  type: string
user_id_body:
  description: |
    The user ID of the user who owns the instance.
  in: body
  required: true
  type: string
