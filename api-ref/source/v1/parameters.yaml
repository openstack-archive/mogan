# variables in header
openstack-request-id:
  description: >
    A unique ID for tracking the request. The request ID associated with the request
    appears in the log lines for that request. By default, the middleware configuration
    ensures that the request ID appears in the log files.
  in: header
  required: true
  type: string

# variables in path
address_path:
  description: |
    The floating IP address.
  in: path
  required: true
  type: string
api_version:
  in: path
  required: true
  type: string
  description: >
    The API version as returned in the links from the ``GET /`` call.
instance_ident:
  description: |
    The UUID of the instance.
  in: path
  required: true
  type: string
spec_key_path:
  description: |
    The key of the extra spec.
  in: path
  required: true
  type: string
type_uuid_path:
  description: |
    The UUID of the type.
  in: path
  required: true
  type: string

# variables in query
all_tenants:
  description: |
    Specify the ``all_tenants=1`` query parameter to list all instances
    for all projects. By default this is only allowed by admin users.
  in: query
  required: false
  type: integer
fields:
  description: |
    One or more fields to be returned in the response.

    For example, the following request returns only the ``uuid``
    and ``name`` fields for each instance:

    ::

       GET /v1/instances?fields=uuid,name
  in: query
  required: false
  type: array
user_id:
  description: |
    Filters the response by a user, by ID.
  in: query
  required: false
  type: string

# variables in body

address:
  description: |
    The floating IP address.
  in: body
  required: true
  type: string
availability_zone:
  description: |
    The availability zone from which to launch the instance. When you provision resources,
    you specify from which availability zone you want your instance to be built.  Typically,
    you use availability zones to arrange bare metal nodes into logical groups.
    An availability zone provides a form of physical isolation and redundancy from
    other availability zones. For instance, if some racks in your data center are
    on a separate power source, you can put servers in those racks in their own availability
    zone. Availability zones can also help separate different classes of hardware.  By
    segregating resources into availability zones, you can ensure that your application
    resources are spread across disparate machines to achieve high availability in
    the event of hardware or other failure.
  in: body
  required: false
  type: string
availability_zones:
  description: |
    An array of availability zone name.
  in: body
  required: true
  type: array
created_at:
  description: |
    The date and time when the resource was created. The date and time
    stamp format is `ISO 8601 <https://en.wikipedia.org/wiki/ISO_8601>`_

    ::

      CCYY-MM-DDThh:mm:ss±hh:mm

    For example, ``2015-08-27T09:49:58-05:00``. The ``±hh:mm``
    value, if included, is the time zone as an offset from UTC.  In
    the previous example, the offset value is ``-05:00``.
  in: body
  required: true
  type: string
extra:
  description: |
    Metadata key and value pairs. The maximum size of the metadata key and value is
    255 bytes each.
  in: body
  required: false
  type: object
fixed_address:
  description: |
    The fixed IP address with which you want to associate the floating IP address.
  in: body
  required: false
  type: string
imageRef:
  description: |
    The UUID of the image to use for your instance.
  in: body
  required: true
  type: string
instance_description:
  description: |
    A free form description of the instance. Limited to 255 characters
    in length.
  in: body
  required: false
  type: string
instance_name:
  description: |
    The instance name.
  in: body
  required: true
  type: string
instance_power_state:
  description: |
    The current power state of this instance. Usually, “power on” or “power off”, but may be “None”
    if Mogan is unable to determine the power state (eg, due to hardware failure)
  in: body
  required: true
  type: string
instance_status:
  description: |
    The status of this instance. Usually, "building", "active", "error", or "None".
  in: body
  required: true
  type: string
instance_uuid:
  description: |
    The UUID of the instance
  in: body
  required: true
  type: string
launched_at:
  description: |
    The date and time when the instance was launched. The date and time
    stamp format is `ISO 8601 <https://en.wikipedia.org/wiki/ISO_8601>`_

    ::

      CCYY-MM-DDThh:mm:ss±hh:mm

    For example, ``2015-08-27T09:49:58-05:00``. The ``±hh:mm``
    value, if included, is the time zone as an offset from UTC.  In
    the previous example, the offset value is ``-05:00``.
  in: body
  required: true
  type: string
links:
  description: |
    A list of relative links. Includes the self and bookmark links.
  in: body
  required: true
  type: array
lock_state:
  description: |
    The request to lock/unlock instances.
  in: body
  required: true
  type: boolean
max_count_body:
  description: |
      The max number of servers to be created. Defaults to the value of ``min_count``.
  in: body
  required: false
  type: integer
min_count_body:
  description: |
    The min number of servers to be created. Defaults to 1.
  in: body
  required: false
  type: integer
multi_instacne_name_body:
  description: |
    A base name for creating unique names during multiple create. A unique
    string will be appended to the end of this base name for every instacne
    created.
  in: body
  required: true
  type: string
network_info:
  description: |
    The port info in the requested network for the instance, with fixed_ip, mac_address, and
    network uuid
  in: body
  required: true
  type: dict
network_port_type:
  description: |
    To provision the server instance with a specified type of NIC(like 1GE or 10 GE) for a
    network, specify the type of the NIC in the ``port_type`` key in a dict in ``networks`` list.
  in: body
  required: false
  type: string
network_uuid:
  description: |
    To provision the server instance with a NIC for a network, specify the UUID of
    the network in the ``uuid`` key in a dict in ``networks`` list.
  in: body
  required: true
  type: string
networks:
  description: |
    A list of networks of the tenant. Optionally, you can create one or more NICs on the instance.
    To provision the server instance with a NIC for a network, specify the UUID of the network
    in the ``uuid`` key in a dict in ``networks`` list. To provision the server instance with a
    specified type of NIC, specify the port-type key in a dict in a ``networks`` list.
  in: body
  required: true
  type: array
power_state:
  description: |
    The current power state of this Instance. Usually, "power on" or
    "power off", but may be "None" if Mogan is unable to determine the power
    state (eg, due to hardware failure).
  in: body
  required: true
  type: string
project_id_body:
  description: |
    The UUID of the project in a multi-tenancy cloud.
  in: body
  required: true
  type: string
type_description:
  description: |
    The description of the type.
  in: body
  required: true
  type: string
type_extra_specs:
  description: |
    Extra spec key and value pairs associate with the type.
  in: body
  required: true
  type: object
type_is_public:
  description: |
    Whether the type is public (available to all projects) or scoped
    to a set of projects. Default is True if not specified.
  in: body
  required: true
  type: boolean
type_is_public_not_required:
  description: |
    Whether the type is public (available to all projects) or scoped
    to a set of projects. Default is True if not specified.
  in: body
  required: true
  type: boolean
type_name:
  description: |
    The name of the type.
  in: body
  required: true
  type: string
type_uuid:
  description: |
    The UUID of the type.
  in: body
  required: true
  type: string
type_uuid_not_required:
  description: |
    The UUID of the type.
  in: body
  required: false
  type: string
typeRef:
  description: |
    The type reference, as a UUID or full URL, for the type for your server instance.
  in: body
  required: true
  type: string
types:
  description: |
    An array of type objects.
  in: body
  required: true
  type: array
updated_at:
  description: |
    The date and time when the resource was updated. The date and time
    stamp format is `ISO 8601 <https://en.wikipedia.org/wiki/ISO_8601>`_

    ::

      CCYY-MM-DDThh:mm:ss±hh:mm

    For example, ``2015-08-27T09:49:58-05:00``. The ``±hh:mm``
    value, if included, is the time zone as an offset from UTC.  In
    the previous example, the offset value is ``-05:00``.
  in: body
  required: true
  type: string
user_id_body:
  description: |
    The user ID of the user who owns the instance.
  in: body
  required: true
  type: string
